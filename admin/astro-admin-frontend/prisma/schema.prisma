// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model Account {
  id                String  @id @default(uuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@index([userId])
}

model Session {
  id           String   @id @default(uuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
}

model Shop {
  id         String        @id @default(uuid())
  title      String
  active     Boolean       @default(true)
  profile    ShopProfile[]
  created_at DateTime      @default(now())
  updated_at DateTime      @default(now())

  @@map("shops")
}

model ShopProfile {
  id          String   @id @default(uuid())
  shop_id     String   @unique
  description String
  profile_url String
  cover_url   String
  shop        Shop?    @relation(fields: [shop_id], references: [id])
  created_at  DateTime @default(now())
  updated_at  DateTime @default(now())

  @@index([shop_id])
  @@map("shop_profile")
}

model User {
  id                String    @id @default(uuid())
  name              String?
  firstName         String?
  lastName          String?
  email             String    @unique
  username          String?   @unique
  password          String?
  password_recovery String?
  image             String?
  emailVerified     DateTime? @map("email_verified")
  accepted          Boolean   @default(true)
  createdAt         DateTime  @default(now())
  updatedAt         DateTime  @updatedAt
  Account           Account[]
  Session           Session[]

  @@map("users")
}
